openapi: 3.0.3
info: 
  title: Shop Online APIs Definition
  description: |
   ## About Us
    Using this `OpenAPI specification`, any consumer can understand the _APIs_ that are exposed by the ***Shop-Online*** team.
    # Product Categories
      - Mobiles
        - Apple
        - Samsung
        - OnePlus
      - Laptops
      - Watches
      - Accessories 
        - TV
        - Home Appliances
  termsOfService: http://hem-kant.blogspot.com/
  contact: 
    name: API Support
    url: http://hem-kant.blogspot.com/
    email: hemkant.india@gmail.com
  license: 
    name: OnlineShop License
    url: http://hem-kant.blogspot.com/
  version: 0.0.1
servers: 
  - url: https://dev.api.com/v1/
    description: Devlopment API
  - url: https://qa.api.com/v1/
    description: QA API
  - url: https://api.com/v1/
    description: PROD API
  - url: https://{username}.api.com:{port}/{version}
    variables:
      username:
        default: demo
        description: this value is a default.
      port:
        enum:
          - "8080"
          - "443"
        default: "8080"
      version: 
        default: v1
tags:
  - name: Categories
    description: Categories realted opreations
  - name: Products
    description: Products realted opreations
  - name: Orders
    description: Orders realted opreations
paths: 
  /categories:
    get:
      tags:
        - Categories
      summary: Returns the list of all products categories
      description: |
         Returns the list of all products and categories which is available on shopOnline portal
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            maximum: 1000
          examples: 
            mobiles: 
              summary: Use this example for mobiles
              value: 100
            laptops:
              summary: Use this example for laptops
              value: 200
            headphones:
              summary: Use this example for headphones
              value: 300
      responses: 
        '200':
          description: A List of catergories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    categoryId:
                      type: integer
                    name:
                      type: string
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                    - categoryId: 100
                      name: mobiles
                    - categoryId: 200
                      name: laptops
                    - categoryId: 300
                      name: headphones
                single-category-data:
                  summary: Single Categories example data
                  value:
                    - categoryId: 100
                      name: mobiles
                    
  /categories/{categoryId}:
    get:
      tags:
        - Categories
      summary: Returns the list of all products categories
      description: Returns the list of all products and categories which is available on shopOnline portal
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
            maximum: 1000
          example: 100
      responses: 
        '200':
          description: A List of catergories
          content:
            application/json:
              schema:
                type: object
                properties:
                  categoryId:
                    type: integer
                  name:
                    type: string 
  /products:
    get:
      tags:
        - Products
      summary: Returns the list of all products
      description: Returns the list of all products which is available on shopOnline portal
      parameters:
        - name: categoryId
          in: query
          schema:
            type: integer
            maximum: 1000
          example: 100
      responses: 
        '200':
          description: A List of catergories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                    categoryName:
                      type: string
                    quantity:
                      type: integer
                      description: |
                        ***Quantity*** represents `stock` value when this field is being sent by OnlineShope.Where as in the scenarios of consumer sending this feild, it represents `number of product items` inside the order. Consumers are expected to handle the scenario of stopping the end user <u>*when the stock value is 0*</u> 
              examples:
                products-data:
                  summary: Products example data
                  value:
                    - productId: 101
                      name: Apple iPhone 13
                      price: 1000000000
                      categoryName: Mobiles
                      quantity: 1
                    - ProductId: 102
                      name: Apple iPhone 14
                      price: 1000000000
                      categoryName: Mobiles
                      quantity: 1
  /products/{productsId}:
    get:
      tags:
        - Products
      summary: Returns the products details
      description: Returns the products details based on ID which is available on shopOnline portal
      parameters:
        - name: productsId
          in: path
          required: true
          schema:
            type: integer
            maximum: 1000
          example: 100
      responses: 
        '200':
          description: A List of catergories
          content:
            application/json:
              schema:
                type: object
                properties:
                    productId:
                      type: integer
                    name:
                      type: string
                    price:
                      type: number
                    categoryName:
                      type: string
                    quantity:
                      type: integer
  /orders:
    post:
      tags:
        - Orders
      summary: order api
      description: |
        Post order details for processing
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                products: 
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      name:
                        type: string
                      price:
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                        description: |
                          ***Quantity*** represents `stock` value when this field is being sent by OnlineShope.Where as in the scenarios of consumer sending this feild, it represents `number of product items` inside the order. Consumers are expected to handle the scenario of stopping the end user <u>*when the stock value is 0*</u> 
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city:
                      type: string
                    zipcode:
                      type: string
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId:
                    type: integer
    put:
      tags:
        - Orders
      summary: update order api
      description: |
        update order details for processing
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId: 
                  type: integer
                products: 
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                      name:
                        type: string
                      price:
                        type: number
                      categoryName:
                        type: string
                      quantity:
                        type: integer
                        description: |
                            ***Quantity*** represents `stock` value when this field is being sent by OnlineShope.Where as in the scenarios of consumer sending this feild, it represents `number of product items` inside the order. Consumers are expected to handle the scenario of stopping the end user <u>*when the stock value is 0*</u> 
                address:
                  type: object
                  properties:
                    addressLine:
                      type: string
                    city:
                      type: string
                    zipcode:
                      type: string
      responses:
        '200':
          description: Order updated successfully
    delete:
      tags:
        - Orders
      summary: delete order api
      description: delete order details
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Order is deleted successfully
    get:
      tags:
        - Orders
      summary: get order details
      description: get order details
      parameters:
        - name: orderId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order is fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  orderId: 
                    type: integer
                  products: 
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: integer
                        name:
                          type: string
                        price:
                          type: number
                        categoryName:
                          type: string
                        quantity:
                          type: integer
                  address:
                    type: object
                    properties:
                      addressLine:
                        type: string
                      city:
                        type: string
                      zipcode:
                        type: string
              
      
      