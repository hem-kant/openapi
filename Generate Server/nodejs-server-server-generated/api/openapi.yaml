openapi: 3.0.3
info:
  title: Shop Online APIs Definition
  description: "## About Us\n Using this `OpenAPI specification`, any consumer can\
    \ understand the _APIs_ that are exposed by the ***Shop-Online*** team.\n # Product\
    \ Categories\n   - Mobiles\n     - Apple\n     - Samsung\n     - OnePlus\n   -\
    \ Laptops\n   - Watches\n   - Accessories \n     - TV\n     - Home Appliances\n"
  termsOfService: http://hem-kant.blogspot.com/
  contact:
    name: API Support
    url: http://hem-kant.blogspot.com/
    email: hemkant.india@gmail.com
  license:
    name: OnlineShop License
    url: http://hem-kant.blogspot.com/
  version: 0.0.1
  x-custom-info:
    comment: some comments
    authors:
    - name: XYZ
      email: xya@abc.com
externalDocs:
  description: External Documentation
  url: https://github.com/hem-kant/openapi/
servers:
- url: https://dev.api.com/v1/
  description: Devlopment API
- url: https://qa.api.com/v1/
  description: QA API
- url: https://api.com/v1/
  description: PROD API
- url: "https://{username}.api.com:{port}/{version}"
  variables:
    username:
      description: this value is a default.
      default: demo
    port:
      enum:
      - "8080"
      - "443"
      default: "8080"
    version:
      default: v1
security:
- BasicAuth: []
- BearerAuth: []
- APIKeyAuth: []
- oAuth2AuthCode:
  - read
  - write
  - admin
tags:
- name: Categories
  description: Categories realted opreations
- name: Products
  description: Products realted opreations
- name: Orders
  description: Orders realted opreations
paths:
  /categories:
    get:
      tags:
      - Categories
      summary: Returns the list of all products categories
      description: "Returns the list of all products and categories \nwhich is available\
        \ on shopOnline portal\n"
      operationId: getCategories
      parameters:
      - name: categoryId
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
        examples:
          mobiles:
            summary: Use this example for mobiles
            value: 100
          laptops:
            summary: Use this example for laptops
            value: 200
          headphones:
            summary: Use this example for headphones
            value: 300
      responses:
        "200":
          description: A List of catergories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category'
                x-content-type: application/json
              examples:
                all-categories-data:
                  summary: Categories example data
                  value:
                  - categoryId: 100
                    name: mobiles
                  - categoryId: 200
                    name: laptops
                  - categoryId: 300
                    name: headphones
                single-category-data:
                  summary: Single Categories example data
                  value:
                  - categoryId: 100
                    name: mobiles
        "500":
          description: |
            ### An error has occured please contant hemkant.india@gmail.com for assistance
      security:
      - BasicAuth: []
      x-swagger-router-controller: Categories
  /categories/{categoryId}:
    get:
      tags:
      - Categories
      summary: Returns the list of all products categories
      description: Returns the list of all products and categories which is available
        on shopOnline portal
      operationId: getCategoryDetails
      parameters:
      - name: categoryId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1000
          type: integer
        example: 100
      responses:
        "200":
          description: A List of catergories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
        "500":
          description: |
            ### An error has occured please contant hemkant.india@gmail.com for assistance
      security: []
      x-swagger-router-controller: Categories
  /products:
    get:
      tags:
      - Products
      summary: Returns the list of all products
      description: Returns the list of all products which is available on shopOnline
        portal
      operationId: getProducts
      parameters:
      - name: categoryId
        in: query
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          type: integer
        example: 100
      responses:
        "200":
          description: A List of catergories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/products'
                x-content-type: application/json
              examples:
                products-data:
                  summary: Products example data
                  value:
                  - productId: 101
                    name: Apple iPhone 13
                    price: 1000000000
                    categoryName: Mobiles
                    quantity: 1
                  - ProductId: 102
                    name: Apple iPhone 14
                    price: 1000000000
                    categoryName: Mobiles
                    quantity: 1
        "500":
          description: |
            ### An error has occured please contant hemkant.india@gmail.com for assistance
      x-swagger-router-controller: Products
  /products/{productsId}:
    get:
      tags:
      - Products
      summary: Returns the products details
      description: Returns the products details based on ID which is available on
        shopOnline portal
      operationId: getProductDetails
      parameters:
      - name: productsId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          maximum: 1000
          type: integer
        example: 100
      responses:
        "200":
          description: A List of catergories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/products'
        "500":
          description: |
            ### An error has occured please contant hemkant.india@gmail.com for assistance
      x-swagger-router-controller: Products
  /orders:
    get:
      tags:
      - Orders
      summary: get order details
      description: get order details
      operationId: getOrderDetails
      parameters:
      - name: orderId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Order is fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "500":
          description: |
            ### An error has occured please contant hemkant.india@gmail.com for assistance
      x-swagger-router-controller: Orders
    put:
      tags:
      - Orders
      summary: update order api
      description: |
        update order details for processing
      operationId: updateOrderdetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orders_body'
      responses:
        "200":
          description: Order updated successfully
        "500":
          description: |
            ### An error has occured please contant hemkant.india@gmail.com for assistance
      x-swagger-router-controller: Orders
    post:
      tags:
      - Orders
      summary: order api
      description: |
        Post order details for processing
      operationId: saveOrderDetails
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/orders_body_1'
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_201'
          links:
            GetOrderByOrderId:
              $ref: '#/components/links/GetOrderByOrderId'
        "500":
          description: |
            ### An error has occured please contant hemkant.india@gmail.com for assistance
      x-swagger-router-controller: Orders
    delete:
      tags:
      - Orders
      summary: delete order api
      description: delete order details
      operationId: deleteOrderDetails
      parameters:
      - name: orderId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "204":
          description: Order is deleted successfully
        "500":
          description: |
            ### An error has occured please contant hemkant.india@gmail.com for assistance
      x-swagger-router-controller: Orders
  /oneOfOrders:
    post:
      tags:
      - Orders
      summary: Insert oneof the order details
      description: Insert oneof the order details in shopping cart
      operationId: oneOfOrdersPOST
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/oneOfOrders_body'
      responses:
        "200":
          description: order placed
      x-swagger-router-controller: Orders
  /anyOfOrders:
    get:
      tags:
      - Orders
      summary: Get order
      description: Get order details based on ID
      operationId: anyOfOrdersGET
      parameters:
      - name: orderId
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: fetchType
        in: query
        description: |
          Fetch Type:
            * `summary` - will provide the order summary
            * `details` - will provide the sumamr & details of order address
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - summary
          - details
      responses:
        "200":
          description: return product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
      x-swagger-router-controller: Orders
components:
  schemas:
    Address:
      type: object
      properties:
        addressLine:
          type: string
        city:
          type: string
        state:
          type: string
          enum:
          - ND
          - MUM
          - HYD
        zipcode:
          type: string
        isOfficeAddress:
          type: boolean
      example:
        zipcode: zipcode
        city: city
        state: ND
        addressLine: addressLine
        isOfficeAddress: true
    products:
      type: object
      properties:
        productId:
          type: integer
        name:
          type: string
        price:
          type: number
          format: float
        categoryName:
          type: string
          nullable: true
        releseDate:
          type: string
          format: date
          readOnly: true
        quantity:
          type: integer
          description: "***Quantity*** represents `stock` value when this field is\
            \ being sent by OnlineShope.Where as in the scenarios of consumer sending\
            \ this feild, it represents `number of product items` inside the order.\
            \ Consumers are expected to handle the scenario of stopping the end user\
            \ <u>*when the stock value is 0*</u> \n"
      example:
        quantity: 1
        productId: 0
        price: 6.0274563
        name: name
        releseDate: 2000-01-23
        categoryName: categoryName
    category:
      type: object
      properties:
        categoryId:
          type: integer
        name:
          type: string
      example:
        name: name
        categoryId: 0
    mobiles:
      allOf:
      - $ref: '#/components/schemas/products'
      - required:
        - networkType
        type: object
        properties:
          networkType:
            type: string
            enum:
            - 4G
            - 5G
    laptops:
      allOf:
      - $ref: '#/components/schemas/products'
      - required:
        - ram
        type: object
        properties:
          ram:
            type: string
            enum:
            - 8GB RAM
            - 16GB RAM
            - 32GB RAM
    OrderSummary:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/products'
    OrderDetails:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
    inline_response_200:
      type: object
      properties:
        orderId:
          type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/products'
        address:
          $ref: '#/components/schemas/Address'
      example:
        address:
          zipcode: zipcode
          city: city
          state: ND
          addressLine: addressLine
          isOfficeAddress: true
        orderId: 0
        products:
        - quantity: 1
          productId: 0
          price: 6.0274563
          name: name
          releseDate: 2000-01-23
          categoryName: categoryName
        - quantity: 1
          productId: 0
          price: 6.0274563
          name: name
          releseDate: 2000-01-23
          categoryName: categoryName
    orders_body:
      type: object
      properties:
        orderId:
          type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/products'
        address:
          $ref: '#/components/schemas/Address'
    orders_body_1:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/products'
        address:
          $ref: '#/components/schemas/Address'
    inline_response_201:
      type: object
      properties:
        orderId:
          type: integer
      example:
        orderId: 0
    oneOfOrders_body:
      required:
      - address
      - products
      type: object
      properties:
        products:
          type: object
          oneOf:
          - $ref: '#/components/schemas/mobiles'
          - $ref: '#/components/schemas/laptops'
        address:
          $ref: '#/components/schemas/Address'
    inline_response_200_1:
      anyOf:
      - $ref: '#/components/schemas/OrderSummary'
      - $ref: '#/components/schemas/OrderDetails'
  responses:
    InternalServerError:
      description: |
        ### An error has occured please contant hemkant.india@gmail.com for assistance
  parameters:
    orderIdQueryParam:
      name: orderId
      in: query
      required: true
      style: form
      explode: true
      schema:
        type: integer
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    APIKeyAuth:
      type: apiKey
      name: X-API-KEY
      in: header
    oAuth2AuthCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://server/oauth/authorize
          tokenUrl: https://server/api/authorize/token
          scopes:
            read: read accesss
            write: write accesss
            admin: admin accesss
  links:
    GetOrderByOrderId:
      operationId: getProductdetails
      parameters:
        orderId: $response.body#/orderId
      description: |
        * The `orderId` value returned in the response can be used as a input paramter in `GET /orders`.
